#!/usr/bin/env node

/**
 * Script ejecutable para migrar categor√≠as
 * Uso: node run-migration.js [--rollback]
 */

const { spawn } = require('child_process')
const path = require('path')

console.log('üöÄ Iniciando proceso de migraci√≥n de categor√≠as...\n')

// Determinar si es rollback
const isRollback = process.argv.includes('--rollback')
const command = isRollback ? 'rollback' : 'migrate'

console.log(`üìù Ejecutando: ${command}`)
console.log(`üìÇ Directorio: ${process.cwd()}`)

// Construir el comando
const scriptPath = path.join(__dirname, 'src', 'scripts', 'migrate-categories.ts')
const args = ['tsx', scriptPath]

if (isRollback) {
  args.push('--rollback')
}

console.log(`üîß Comando: npx ${args.join(' ')}\n`)

// Ejecutar el script
const child = spawn('npx', args, {
  stdio: 'inherit',
  shell: true,
  cwd: process.cwd()
})

child.on('close', (code) => {
  console.log(`\n‚úÖ Proceso completado con c√≥digo: ${code}`)
  
  if (code === 0) {
    console.log('üéâ ¬°Migraci√≥n ejecutada exitosamente!')
    console.log('\nüìù Pr√≥ximos pasos:')
    console.log('   1. Verifica la aplicaci√≥n en /admin/categories')
    console.log('   2. Prueba crear/editar productos')
    console.log('   3. Confirma que las categor√≠as funcionan correctamente')
  } else {
    console.log('‚ùå Error durante la migraci√≥n')
    console.log('\nüîÑ Si necesitas revertir, ejecuta:')
    console.log('   node run-migration.js --rollback')
  }
})

child.on('error', (error) => {
  console.error('‚ùå Error al ejecutar el script:', error)
  process.exit(1)
})
